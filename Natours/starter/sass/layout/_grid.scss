.row {
  // always define the width using rem for layout
  max-width: $grid-width; // the standard is 1140px, use max-width so as long as long as it's less than 1140px it will be 100%
  //background-color: #eee;
  //very important trick to center the view in the viewport. This means top and bottom have 0 margin, then left and right has "auto" and the browser automatically set the mergin on left and right
  // and so the element will be centered
  margin: 0 auto;

  // use the ":not" psuedo class for everything ecept for last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  // this is pretty cool...using attribute selectors patterns
  // select everything class that starts with "col-"
  [class^="col-"] {
    // background-color: red;
    float: left; // this is where the float happens

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      (2 * (100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }
  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }
  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
